name: M2 testing Jobs

on:
  push:
    branches: [dev, master]

jobs:
  build:
    name: "Build & Sniff"
    runs-on: ubuntu-latest
    #services:
      #mysql:
        #image: mysql:5.7
        #env:
          #MYSQL_ROOT_PASSWORD: root
          #MYSQL_DATABASE: testdb
        #ports:
          #- 3106:3306
        #options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    #defaults:
      #run:
        #working-directory: .
    steps:
      - name: "Setting up MySQL.."
        uses: mirromutth/mysql-action@v1.1 # https://github.com/marketplace/actions/setup-mysql
        with:
          mysql version: '5.7'
          mysql database: 'test'
          mysql root password: 'test'
      - name: "Setting up PHP.." # https://github.com/marketplace/actions/setup-php-action
        uses: shivammathur/setup-php@v2 # https://github.com/shivammathur/setup-php
        with:
          php-version: "7.3"
          tools: composer:v1
          #extensions:
      - name: "Checkout repository.."
        uses: actions/checkout@v2
      #- name: "Copying dummy configuration.."
        #run: cp ./app/etc/env.php.tst ./app/etc/env.php |Â cat ./app/etc/env.php
      - name: "Installing with composer.."
        run: composer install --no-dev --no-progress
      #- name: "Installing Magento's setup.."
        #run: bin/magento setup:install --admin-firstname="test" --admin-lastname="test" --admin-email="test@test.tst" --admin-user="test" --admin-password="test000" --base-url="http://magento.test/" --backend-frontname="test" --db-host="mysql" --db-name="test" --db-user="root" --db-password="test" --use-secure=0 --use-rewrites=1 --use-secure-admin=0 --session-save="db" --currency="EUR" --language="en_US" --timezone="Europe/Rome" --skip-db-validation # --cleanup-database
      #- name: "Upgrading Magento's setup.."
        #run: bin/magento setup:upgrade
      - name: "Enabling all modules.."
        run: ./bin/magento module:enable --all
      - name: "Compiling Magento's code.."
        run: ./bin/magento setup:di:compile
      #- name: "Setting deploy mode.."
        #run: bin/magento deploy:mode:set --skip-compilation production
      #- name: "Deploying static content.."
        #run: bin/magento setup:static-content:deploy -f
      - name: "Installing PHP CodeSniffer.."
        run: curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
      - name: "PHP code sniffing.."
        run: php ./phpcs.phar ./app/code/ -s --colors --extensions=css,js,json,php,phtml
      - name: "PEAR code standard.."
        run: php ./phpcs.phar ./app/code/ -s --colors --extensions=css,js,json,php,phtml --standard=PEAR --exclude=Generic.PHP.DisallowShortOpenTag,Generic.Files.LineLength,PEAR.Commenting.ClassComment,PEAR.NamingConventions.ValidFunctionName,PEAR.NamingConventions.ValidVariableName
      - name: "PSR2 code standard.."
        run: php ./phpcs.phar ./app/code/ -s --colors --extensions=css,js,json,php,phtml --standard=PSR2
      #- name: "Magento2 code standard.."
        #run: php ./phpcs.phar ./app/code/ -s --colors --extensions=css,js,json,php,phtml --standard=./vendor/magento/magento-coding-standard/Magento2/ruleset.xml --exclude=Generic.Files.LineLength,Generic.PHP.DisallowShortOpenTag,PEAR.Commenting.FileComment
      #- name: "Magento2 code standard.."
        #run: ./vendor/squizlabs/php_codesniffer/bin/phpcs ./app/code/ -s --colors --extensions=css,js,json,php,phtml --standard=Magento2 --exclude=Generic.Files.LineLength,Generic.PHP.DisallowShortOpenTag,PEAR.Commenting.FileComment
      #- name: "PHP stan check.."
        #run: ./vendor/bin/phpstan analyse --no-progress ./app/code/
      #- name: "PHPunit DEV check.."
        #run: ./vendor/bin/phpunit -c ./dev/tests/unit/phpunit.xml.dist
  buildphp74:
    name: "Build & Sniff PHP 7.4"
    runs-on: ubuntu-latest
    steps:
      - name: "Setting up MySQL.."
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql version: '5.7'
          mysql database: 'test'
          mysql root password: 'test'
      - name: "Setting up PHP.."
        uses: shivammathur/setup-php@v2
          php-version: "7.4"
          tools: composer:v1
      - name: "Checkout repository.."
        uses: actions/checkout@v2
      - name: "Installing with composer.."
        run: composer install --no-dev --no-progress
      - name: "Enabling all modules.."
        run: ./bin/magento module:enable --all
      - name: "Compiling Magento's code.."
        run: ./bin/magento setup:di:compile
      - name: "Installing PHP CodeSniffer.."
        run: curl -OL https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar
      - name: "PHP code sniffing.."
        run: php ./phpcs.phar ./app/code/ -s --colors --extensions=css,js,json,php,phtml
      - name: "PEAR code standard.."
        run: php ./phpcs.phar ./app/code/ -s --colors --extensions=css,js,json,php,phtml --standard=PEAR --exclude=Generic.PHP.DisallowShortOpenTag,Generic.Files.LineLength,PEAR.Commenting.ClassComment,PEAR.NamingConventions.ValidFunctionName,PEAR.NamingConventions.ValidVariableName
      - name: "PSR2 code standard.."
        run: php ./phpcs.phar ./app/code/ -s --colors --extensions=css,js,json,php,phtml --standard=PSR2
